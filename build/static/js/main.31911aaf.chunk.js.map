{"version":3,"sources":["actions/types.js","actions/auth.js","utils/interact.js","components/layout/Navbar.js","components/layout/WinnersAndPayout.js","components/layout/Games.js","components/layout/Description.js","components/layout/Landing.js","components/games/Flip/Settings.js","components/games/Flip/WinLoseModal.js","components/games/Flip/index.js","components/games/Dice/Settings.js","components/games/Dice/index.js","components/layout/NotFound.js","components/routing/Routes.js","reducers/auth.js","reducers/index.js","utils/api.js","utils/setAuthToken.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_SUCCESS","LOGOUT","login","address","dispatch","a","console","log","type","payload","connectWallet","window","ethereum","request","method","addressArray","obj","status","success","message","target","href","rel","getCurrentWalletConnected","length","connect","state","auth","logout","isAuthenticated","theme","useTheme","isDesktop","useMediaQuery","breakpoints","up","useState","walletAddress","setWallet","useEffect","fetchData","connectWalletPressed","walletResponse","addWalletListener","on","accounts","authLinks","Button","variant","style","color","marginRight","fontSize","fontWeight","backgroundColor","onClick","String","substring","guestLinks","fontFamily","width","className","to","src","alt","height","Typography","marginTop","Stack","direction","Grid","container","spacing","item","xs","md","Box","sx","background","borderRadius","TableContainer","Table","tableCellClasses","root","borderBottom","TableBody","TableRow","TableCell","align","mt","Container","maxWidth","justifyContent","alignItems","flexWrap","m","size","padding","fontColor","mb","marginBottom","WinnersAndPayout","Description","Games","mute","setMute","React","open","setOpen","handleClose","BootstrapDialog","styled","Dialog","BootstrapDialogTitle","props","children","onClose","other","DialogTitle","p","IconButton","position","right","top","palette","grey","mr","margin","id","DialogContent","dividers","gutterBottom","DialogActions","autoFocus","WinLoseModal","isWin","classes","makeStyles","useStyles","zIndex","textAlign","selected","setSelected","betType","setBetType","betAmount","setBetAmount","setIsWin","setMinValue","MinButton","ml","HeadColor","withStyles","WebkitBackgroundClip","WebkitTextFillColor","TailColor","borderColor","handleClickOpen","Settings","value","TextField","onChange","event","InputProps","endAdornment","fullWidth","currentType","Math","random","startIcon","fontWight","my","setValue","handleChange","opacity","slider","button","CustomizedSlider","Slider","e","readOnly","mx","border","defaultValue","valueLabelDisplay","step","marks","newValue","readonly","alert","NotFound","Routes","exact","path","component","Admin","Flip","Dice","initialState","loading","user","authReducer","action","combineReducers","api","axios","create","baseURL","headers","interceptors","response","use","res","err","store","Promise","reject","setAuthToken","token","defaults","common","localStorage","setItem","removeItem","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","App","addEventListener","Landing","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31911aaf.chunk.js","sourcesContent":["export const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT';\r\n","// import api from '../utils/api';\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGOUT\r\n} from './types';\r\n\r\n// Login User\r\nexport const login = (address) => async dispatch => {\r\n\tconsole.log(address);\r\n\tdispatch({\r\n\t\ttype: LOGIN_SUCCESS,\r\n\t\tpayload: address\r\n\t});\r\n};\r\n\r\n// Logout\r\nexport const logout = () => ({ type: LOGOUT });\r\n","export const connectWallet = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n      const obj = {\r\n        status: \"👆🏽 Click above button to play the game.\",\r\n        success: \"true\",\r\n        address: addressArray[0],\r\n      };\r\n      return obj;\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        success: \"false\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      success: \"false\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`} rel=\"noreferrer\">\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};\r\n\r\nexport const getCurrentWalletConnected = async () => {\r\n  if (window.ethereum) {\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        return {\r\n          address: addressArray[0],\r\n          status: \"👆🏽 Click the above button to paly the game.\",\r\n        };\r\n      } else {\r\n        return {\r\n          address: \"\",\r\n          status: \"🦊 Connect to Metamask using the above button.\",\r\n        };\r\n      }\r\n    } catch (err) {\r\n      return {\r\n        address: \"\",\r\n        status: \"😥 \" + err.message,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      address: \"\",\r\n      status: (\r\n        <span>\r\n          <p>\r\n            {\" \"}\r\n            🦊{\" \"}\r\n            <a target=\"_blank\" href={`https://metamask.io/download.html`} rel=\"noreferrer\">\r\n              You must install Metamask, a virtual Ethereum wallet, in your\r\n              browser.\r\n            </a>\r\n          </p>\r\n        </span>\r\n      ),\r\n    };\r\n  }\r\n};","import React, { Fragment, useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login, logout } from '../../actions/auth'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { Button, Typography, useMediaQuery, Stack } from '@mui/material'\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n} from '../../utils/interact.js'\r\n// import useOffSetTop from '../../utils/useOffsetTop'\r\n// import Alert from '@mui/material/Alert';\r\n// import AlertTitle from '@mui/material/AlertTitle';\r\n\r\nconst Navbar = ({ auth: { isAuthenticated }, login, logout }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  // const isOffset = useOffSetTop(100)\r\n\r\n  console.log(isAuthenticated)\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      const { address } = await getCurrentWalletConnected()\r\n      setWallet(address)\r\n      // ...\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n      // setStatus(\r\n      //   <p>\r\n      //     {\" \"}\r\n      //     🦊{\" \"}\r\n      //     <a href={`https://metamask.io/download.html`}>\r\n      //       You must install Metamask, a virtual Ethereum wallet, in your\r\n      //       browser.\r\n      //     </a>\r\n      //   </p>\r\n      // );\r\n    }\r\n  }\r\n\r\n  const authLinks = (\r\n    <ul>\r\n      <Button\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n        }}\r\n      >\r\n        Games\r\n      </Button>\r\n      <Button\r\n        onClick={connectWalletPressed}\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.15)',\r\n        }}\r\n      >\r\n        {walletAddress.length > 0 ? (\r\n          'Connected: ' +\r\n          String(walletAddress).substring(0, 6) +\r\n          '...' +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>Connect Wallet</span>\r\n        )}\r\n      </Button>\r\n    </ul>\r\n  )\r\n\r\n  const guestLinks = (\r\n    <ul>\r\n      {walletAddress.length > 0 ? (\r\n        <Button\r\n          variant=\"text\"\r\n          href=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            marginRight: '3px',\r\n            fontSize: '86',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Games\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant=\"text\"\r\n          href=\"/\"\r\n          style={{\r\n            color: 'white',\r\n            marginRight: '3px',\r\n            fontSize: '86',\r\n            fontWeight: 'bold',\r\n            backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            width: '152.6px',\r\n          }}\r\n        >\r\n          Games\r\n        </Button>\r\n      )}\r\n      <Button\r\n        onClick={connectWalletPressed}\r\n        variant=\"text\"\r\n        style={{\r\n          color: 'white',\r\n          marginRight: '3px',\r\n          fontSize: '86',\r\n          fontWeight: 'bold',\r\n          backgroundColor: 'rgba(255, 255, 255, 0.1)',\r\n          fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n          width: {},\r\n        }}\r\n      >\r\n        {isAuthenticated || walletAddress.length > 0 ? (\r\n          'Connected: ' +\r\n          String(walletAddress).substring(0, 6) +\r\n          '...' +\r\n          String(walletAddress).substring(38)\r\n        ) : (\r\n          <span>Connect Wallet</span>\r\n        )}\r\n      </Button>\r\n    </ul>\r\n  )\r\n\r\n  if (isDesktop) {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ width: '40px', height: '20px' }}\r\n          />\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <Typography\r\n            style={{\r\n              color: '#ffffff',\r\n              fontSize: '34px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Smart Games\r\n          </Typography>\r\n        </Link>\r\n        <Typography\r\n          style={{\r\n            color: '#ffffff',\r\n            fontSize: '16px',\r\n            marginTop: '10px',\r\n            fontFamily: 'ErasITC-Light,AdobeInvisFont,MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Provable fair games that is entirely based on smart contract with low\r\n          1% transaction fees, no sign ups & deposits.\r\n        </Typography>\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      </nav>\r\n    )\r\n  } else {\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Stack direction=\"row\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ width: '40px', height: '20px', marginTop: '15px' }}\r\n          />\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <Typography\r\n            style={{\r\n              color: '#ffffff',\r\n              fontSize: '34px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Smart Games\r\n          </Typography>\r\n        </Link>\r\n        </Stack>\r\n        <Fragment>{isAuthenticated ? authLinks : guestLinks}</Fragment>\r\n      </nav>\r\n    )\r\n  }\r\n}\r\n\r\nNavbar.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  logout: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, logout })(Navbar)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n} from '@mui/material'\r\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Box\r\n          sx={{\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: '20px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            24H Top Winners\r\n          </Typography>\r\n          <TableContainer>\r\n            <Table\r\n              sx={{\r\n                [`& .${tableCellClasses.root}`]: {\r\n                  borderBottom: 'none',\r\n                },\r\n              }}\r\n            >\r\n              <TableBody>\r\n                <TableRow style={{ height: '10px' }}>\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    sx={{ color: '#fff', height: 'auto !important' }}\r\n                  >\r\n                    0xh65244\r\n                  </TableCell>\r\n                  <TableCell sx={{ color: '#fff' }}>564 BUSD</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ color: '#fff' }}>\r\n                    0x5g7a4\r\n                  </TableCell>\r\n                  <TableCell sx={{ color: '#fff' }}>384.4 BUSD</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ color: '#fff' }}>\r\n                    0xh65244\r\n                  </TableCell>\r\n                  <TableCell sx={{ color: '#fff' }}>564 BUSD</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ color: '#fff' }}>\r\n                    0x5g7a4\r\n                  </TableCell>\r\n                  <TableCell sx={{ color: '#fff' }}>384.4 BUSD</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" sx={{ color: '#fff' }}>\r\n                    0x5g7a4\r\n                  </TableCell>\r\n                  <TableCell sx={{ color: '#fff' }}>384.4 BUSD</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Box\r\n          sx={{\r\n            background: 'rgba(255, 255, 255, 0.1)',\r\n            borderRadius: '10px',\r\n          }}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              fontSize: '20px',\r\n              fontWeight: 'bold',\r\n              fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            Total Payout\r\n          </Typography>\r\n          <Typography\r\n            sx={{\r\n              fontSize: '18px',\r\n              mt: 1,\r\n              fontFamily: 'ErasITC-Light,AdobeInvisFont,MyriadPro-Regular',\r\n            }}\r\n          >\r\n            138,000,684 BUSD\r\n          </Typography>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid, Typography, Stack, Button } from '@mui/material'\r\nimport { Container, useMediaQuery } from '@material-ui/core'\r\nimport { useTheme } from '@material-ui/core/styles'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Stack spacing={3} sx={{ width: '100%' }}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n            width: '100%',\r\n          }}\r\n        >\r\n          Games\r\n        </Typography>\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent={isDesktop ? 'space-between' : 'center'}\r\n          alignItems=\"bottom\"\r\n          flexWrap=\"wrap\"\r\n        >\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/coin-flip-white.png\"\r\n              alt=\"smart-game\"\r\n              style={{\r\n                height: '150px',\r\n                width: '80%',\r\n                justifyContent: 'center',\r\n              }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Coin Flip\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              href=\"/flip\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                mb: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/dice.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Dice\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              href=\"/dice\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/raffle.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Raffle\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/two-dice.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Two Dice\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n          <Stack spacing={1} sx={{ m: 1 }}>\r\n            <img\r\n              src=\"/assets/roll.png\"\r\n              alt=\"smart-game\"\r\n              style={{ height: '150px' }}\r\n            />\r\n            <Typography\r\n              sx={{\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n              }}\r\n            >\r\n              Smart Roll\r\n            </Typography>\r\n            <Button\r\n              size=\"small\"\r\n              sx={{\r\n                padding: 0,\r\n                backgroundColor: '#F4ADAB',\r\n                fontSize: '20px',\r\n                fontWeight: 'bold',\r\n                fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n                fontColor: '#B52F1B',\r\n                '&hover': { backgroundColor: '#000', color: '#fff' },\r\n                marginBottom: 10,\r\n              }}\r\n            >\r\n              {' '}\r\n              Play Now{' '}\r\n            </Button>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    </Container>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { Grid, Typography } from '@mui/material'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Transparent\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          All transactions are recorded on the blockchain\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Anonymous\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          No user data is stored, each player is recognised only by thei\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontFamily: 'Helvetica-Bold,AdobeInvisFont,MyriadPro-Regular',\r\n            fontSize: '34px',\r\n            fontWeight: 'bold',\r\n          }}\r\n        >\r\n          Provably Fair\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12} md={6}>\r\n        <Typography\r\n          sx={{\r\n            fontSize: '16px',\r\n            fontFamily: 'ErasITC-Light, AdobeInvisFont, MyriadPro-Regular',\r\n          }}\r\n        >\r\n          Gameplay is governed by Smart Contract which is uploaded onto\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { Grid } from '@mui/material'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport WinnersAndPayout from './WinnersAndPayout.js'\r\nimport Games from './Games.js'\r\nimport Description from './Description.js'\r\n\r\nconst Landing = ({ isAuthenticated }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"landing-inner\">\r\n        <Grid container spacing={2} mt={15}>\r\n          <Grid item xs={12} md={6}>\r\n            {/* Winners and Total Payout */}\r\n            <WinnersAndPayout />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            {/* Description */}\r\n            <Description />\r\n          </Grid>\r\n        </Grid>\r\n        {/* Games */}\r\n        <Games />\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nLanding.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Landing)\r\n","import React, { useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport { Box, Stack } from '@mui/material'\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff'\r\nimport StorageIcon from '@mui/icons-material/Storage'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nconst Setting = ({ isAuthenticated }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n  // State Values\r\n  const [mute, setMute] = useState(true)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  // Audio Action\r\n  const setAudio = () => {\r\n    console.log(mute)\r\n    setMute(!mute)\r\n    console.log(mute)\r\n  }\r\n\r\n  // Open Modal Action\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .MuiPaper-root': {\r\n      // background: '-webkit-linear-gradient(-90deg, #ffda6f 30%, #e2a139 90%)',\r\n      background: 'rgba(255, 255, 255, 0.7)'\r\n    },\r\n  }))\r\n\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props\r\n\r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    )\r\n  }\r\n\r\n  BootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Stack direction=\"row\" justifyContent={isDesktop ? 'flex-end' : 'center'}>\r\n        <Box mt={3}>\r\n          {/* Open Rule Modal */}\r\n          <IconButton\r\n            onClick={handleClickOpen}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)', mr: 3 }}\r\n          >\r\n            <StorageIcon />\r\n          </IconButton>\r\n\r\n          {/* Mute Audio */}\r\n          <IconButton\r\n            onClick={setAudio}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)' }}\r\n          >\r\n            {mute ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n          </IconButton>\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Dialog */}\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        sx={{ width: isDesktop ? '450px' : '350px', margin: 'auto', marginTop: isDesktop ? '' : '100px' }}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Rules\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Start by setting your Bet Amount. You can set Win Chance, Prediction\r\n            Number and Multiplier by using the slider.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            You can also adjust parameters manually by changing input values.\r\n            After you are ALL set, place your bet and swipe the MONEYBUTTON to\r\n            start the game.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Roll starts and “one” number will be drawn from 0 to 9999. You win\r\n            if the roll outcome is within the chosen area.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            sx={{ borderRadius: '20px' }}\r\n          >\r\n            play now\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSetting.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Setting)\r\n","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Typography from '@mui/material/Typography';\r\nimport { blue } from '@mui/material/colors';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nfunction WinLoseModal(props) {\r\n  const { onClose, isWin, open } = props;\r\n\r\n  const handleClose = () => {\r\n    onClose();\r\n  };\r\n\r\n  // Set TextField's Color\r\n\tconst useStyles = makeStyles({\r\n\t\troot: {\r\n\t\t\t\"& .css-1t1j96h-MuiPaper-root-MuiDialog-paper\": {\r\n        borderRadius: '48px',\r\n        marginTop: '110px'\r\n      }\r\n\t\t}\r\n\t})\r\n\tconst classes = useStyles()\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} open={open} className={classes.root}>\r\n      <DialogTitle sx={{ background: isWin ? 'rgb(45, 211, 191)' : 'rgb(243, 71, 102)', color: 'white', borderRadius: '48px', padding: '12px 29px', zIndex: '9999', textAlign: 'center', fontSize: '22px',  }}> {isWin ? 'YOU WON' : 'YOU LOSE'}</DialogTitle>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nWinLoseModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default WinLoseModal\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../../actions/auth'\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Container,\r\n} from '@mui/material'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport CasinoIcon from '@mui/icons-material/Casino'\r\nimport Settings from './Settings'\r\nimport { makeStyles, useMediaQuery } from '@material-ui/core'\r\n\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n} from '../../../utils/interact.js'\r\n\r\nimport WinLoseModal from './WinLoseModal'\r\n\r\nconst Flip = ({ isAuthenticated, login }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n  const [selected, setSelected] = useState('HEADS')\r\n  const [betType, setBetType] = useState('HEADS')\r\n  const [betAmount, setBetAmount] = useState(0.05)\r\n  const [isWin, setIsWin] = useState('')\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      const { address } = await getCurrentWalletConnected()\r\n      setWallet(address)\r\n      // ...\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // Connect Wallet\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n      // setStatus(\r\n      //   <p>\r\n      //     {\" \"}\r\n      //     🦊{\" \"}\r\n      //     <a href={`https://metamask.io/download.html`}>\r\n      //       You must install Metamask, a virtual Ethereum wallet, in your\r\n      //       browser.\r\n      //     </a>\r\n      //   </p>\r\n      // );\r\n    }\r\n  }\r\n\r\n  // Set Heads or Tails\r\n  const headsSelected = () => {\r\n    setSelected('HEADS')\r\n  }\r\n  const tailsSelected = () => {\r\n    setSelected('TAILS')\r\n  }\r\n\r\n  // Set Bet Amount\r\n  const handleChange = (event) => {\r\n    setBetAmount(event.target.value)\r\n  }\r\n\r\n  // Set Bet Min Value\r\n  const setMinValue = () => {\r\n    setBetAmount(0.05)\r\n  }\r\n  const MinButton = () => (\r\n    <Button\r\n      onClick={setMinValue}\r\n      sx={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        ml: 3,\r\n      }}\r\n    >\r\n      Min\r\n    </Button>\r\n  )\r\n\r\n  // Custom color For Heads and Tails\r\n  const HeadColor = withStyles({\r\n    root: {\r\n      fontSize: '20px !important',\r\n      textAlign: 'center',\r\n      background:\r\n        '-webkit-linear-gradient( #ffda6f 15%, #e2a139 60%, #a44e01 80%)',\r\n      WebkitBackgroundClip: 'text',\r\n      WebkitTextFillColor: 'transparent',\r\n    },\r\n  })(Typography)\r\n\r\n  const TailColor = withStyles({\r\n    root: {\r\n      fontSize: '20px !important',\r\n      textAlign: 'center',\r\n      background:\r\n        '-webkit-linear-gradient( #a44e01 15%, #e2a139 60%, #ffda6f 80%)',\r\n      WebkitBackgroundClip: 'text',\r\n      WebkitTextFillColor: 'transparent',\r\n    },\r\n  })(Typography)\r\n\r\n  // Set TextField's Color\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n        borderColor: '#ffda6f',\r\n      },\r\n      '& .MuiOutlinedInput-input': {\r\n        color: '#e2a139',\r\n      },\r\n      width: '400px',\r\n    },\r\n  })\r\n  const classes = useStyles()\r\n\r\n  // onClick Bet Button\r\n  const startBet = () => {\r\n    let currentType = ''\r\n    if (Math.random() <= 0.5) {\r\n      setBetType('HEADS')\r\n      currentType = 'HEADS'\r\n    } else {\r\n      setBetType('TAILS')\r\n      currentType = 'TAILS'\r\n    }\r\n\r\n    if (selected === currentType) {\r\n      setIsWin(1)\r\n    } else {\r\n      setIsWin(0)\r\n    }\r\n    handleClickOpen()\r\n  }\r\n\r\n  // Open and Close Win/Lose Modal\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = (value) => {\r\n    setOpen(false)\r\n  }\r\n\r\n  //Start Rendering\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"container\">\r\n          <Box\r\n            sx={{\r\n              background: 'rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '10px',\r\n              height: 'auto',\r\n              width: '100%',\r\n              p: 3,\r\n            }}\r\n          >\r\n            {/* Rules and Audio settings */}\r\n            <Settings />\r\n\r\n            {/* Game Logic */}\r\n            <Container maxWidth=\"lg\">\r\n              {/* Set Coin Head or Tail */}\r\n              <Container maxWidth=\"sm\">\r\n                <Stack\r\n                  direction=\"row\"\r\n                  mt={5}\r\n                  justifyContent={isDesktop ? 'space-between' : 'center'}\r\n                  flexWrap=\"wrap\"\r\n                  sx={{ width: '100%' }}\r\n                >\r\n                  {/* Select Heads Button */}\r\n                  <Stack>\r\n                    <Button\r\n                      onClick={headsSelected}\r\n                      sx={{\r\n                        borderRadius: '12px',\r\n                        background:\r\n                          selected === 'HEADS'\r\n                            ? 'linear-gradient(rgb(255, 230, 105) 15%, rgb(255, 140, 100) 46%, rgb(255, 100, 100) 67%)'\r\n                            : '',\r\n                      }}\r\n                    >\r\n                      <Stack\r\n                        sx={{\r\n                          borderRadius: '10px',\r\n                          background: 'rgba(255, 255, 255, 0.2)',\r\n                          padding: '20px 25px',\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/coin_head.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '65px' }}\r\n                        />\r\n                        <HeadColor> HEADs </HeadColor>\r\n                        <HeadColor> 1.8x </HeadColor>\r\n                      </Stack>\r\n                    </Button>\r\n                  </Stack>\r\n\r\n                  {/* Displaying Coin */}\r\n                  <Stack sx={{ height: '190px' }}>\r\n                    <div id=\"coin\" className={betType}>\r\n                      <div className=\"side-a\">\r\n                        <img\r\n                          src=\"/assets/coin_tail.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '190px' }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"side-b\">\r\n                        <img\r\n                          src=\"/assets/coin_head.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '190px' }}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <WinLoseModal\r\n                      open={open}\r\n                      onClose={handleClose}\r\n                      isWin={isWin}\r\n                    />\r\n                  </Stack>\r\n\r\n                  {/* Select Tails Button */}\r\n                  <Stack>\r\n                    <Button\r\n                      onClick={tailsSelected}\r\n                      sx={{\r\n                        borderRadius: '12px',\r\n                        background:\r\n                          selected === 'TAILS'\r\n                            ? 'linear-gradient(rgb(21, 241, 178) 15%, rgb(32, 226, 184) 46%, rgb(62, 186, 199) 60%, rgb(110, 123, 223) 100%, rgb(149, 71, 243) 100%)'\r\n                            : '',\r\n                      }}\r\n                    >\r\n                      <Stack\r\n                        sx={{\r\n                          borderRadius: '10px',\r\n                          background: 'rgba(255, 255, 255, 0.2)',\r\n                          padding: '20px 25px',\r\n                        }}\r\n                      >\r\n                        <img\r\n                          src=\"/assets/coin_tail.png\"\r\n                          alt=\"..\"\r\n                          style={{ height: '65px' }}\r\n                        />\r\n                        <TailColor> TAILS </TailColor>\r\n                        <TailColor> 1.8x </TailColor>\r\n                      </Stack>\r\n                    </Button>\r\n                  </Stack>\r\n                </Stack>\r\n              </Container>\r\n\r\n              {/* Set Bet Amount */}\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                md={12}\r\n                justifyContent=\"center\"\r\n                mt={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  md={12}\r\n                  justifyContent=\"center\"\r\n                  mt={3}\r\n                >\r\n                  <HeadColor>Bet Amount</HeadColor>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  container\r\n                  xs={12}\r\n                  md={12}\r\n                  justifyContent=\"center\"\r\n                  mt={3}\r\n                >\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{ endAdornment: <MinButton /> }}\r\n                    fullWidth\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n\r\n              {/* Connect Wallet and Start Betting */}\r\n              <Grid\r\n                item\r\n                container\r\n                xs={12}\r\n                md={12}\r\n                justifyContent=\"center\"\r\n                mb={3}\r\n              >\r\n                {walletAddress.length > 0 || isAuthenticated ? (\r\n                  <Button\r\n                    onClick={startBet}\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    startIcon={<CasinoIcon />}\r\n                    sx={{\r\n                      width: '300px',\r\n                      height: 54,\r\n                      mt: 3,\r\n                      borderRadius: '10px',\r\n                      fontWight: 'bold',\r\n                      background:\r\n                        'linear-gradient(120deg , #dc2424 15%, #4a569d 80%)',\r\n                      '&:hover': {\r\n                        background:\r\n                          'linear-gradient(120deg , #4a569d 15%, #dc2424 80%)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    Bet {selected}{' '}\r\n                  </Button>\r\n                ) : (\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    onClick={connectWalletPressed}\r\n                    sx={{\r\n                      width: '300px',\r\n                      height: 54,\r\n                      my: 3,\r\n                      borderRadius: '10px',\r\n                      fontWight: 'bold',\r\n                      background:\r\n                        'linear-gradient(120deg , #dc2424 15%, #4a569d 80%)',\r\n                      '&:hover': {\r\n                        background:\r\n                          'linear-gradient(120deg , #4a569d 15%, #dc2424 80%)'\r\n                      }\r\n                    }}\r\n                  >\r\n                    {' '}\r\n                    CONNECT{' '}\r\n                  </Button>\r\n                )}\r\n              </Grid>\r\n            </Container>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nFlip.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Flip)\r\n","import React, { useState, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\nimport Button from '@mui/material/Button'\r\nimport { styled } from '@mui/material/styles'\r\nimport Dialog from '@mui/material/Dialog'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport DialogContent from '@mui/material/DialogContent'\r\nimport DialogActions from '@mui/material/DialogActions'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\n\r\nimport { Box, Stack } from '@mui/material'\r\nimport VolumeUpIcon from '@mui/icons-material/VolumeUp'\r\nimport VolumeOffIcon from '@mui/icons-material/VolumeOff'\r\nimport StorageIcon from '@mui/icons-material/Storage'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nconst Setting = ({ isAuthenticated }) => {\r\n  const theme = useTheme()\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'))\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n  // State Values\r\n  const [mute, setMute] = useState(true)\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  // Audio Action\r\n  const setAudio = () => {\r\n    console.log(mute)\r\n    setMute(!mute)\r\n    console.log(mute)\r\n  }\r\n\r\n  // Open Modal Action\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n    '& .MuiDialogContent-root': {\r\n      padding: theme.spacing(2),\r\n    },\r\n    '& .MuiDialogActions-root': {\r\n      padding: theme.spacing(1),\r\n    },\r\n    '& .MuiPaper-root': {\r\n      background: 'rgba(255, 255, 255, 0.7)',\r\n    },\r\n  }))\r\n\r\n  const BootstrapDialogTitle = (props) => {\r\n    const { children, onClose, ...other } = props\r\n\r\n    return (\r\n      <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n        {children}\r\n        {onClose ? (\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={onClose}\r\n            sx={{\r\n              position: 'absolute',\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        ) : null}\r\n      </DialogTitle>\r\n    )\r\n  }\r\n\r\n  BootstrapDialogTitle.propTypes = {\r\n    children: PropTypes.node,\r\n    onClose: PropTypes.func.isRequired,\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Stack direction=\"row\" justifyContent={isDesktop ? 'flex-end' : 'center'}>\r\n        <Box mt={2}>\r\n          {/* Open Rule Modal */}\r\n          <IconButton\r\n            onClick={handleClickOpen}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)', mr: 3 }}\r\n          >\r\n            <StorageIcon />\r\n          </IconButton>\r\n\r\n          {/* Mute Audio */}\r\n          <IconButton\r\n            onClick={setAudio}\r\n            sx={{ backgroundColor: 'rgba(255, 255, 255, 0.3)' }}\r\n          >\r\n            {mute ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n          </IconButton>\r\n        </Box>\r\n      </Stack>\r\n\r\n      {/* Dialog */}\r\n      <BootstrapDialog\r\n        onClose={handleClose}\r\n        aria-labelledby=\"customized-dialog-title\"\r\n        open={open}\r\n        sx={{ width: isDesktop ? '450px' : '350px', margin: 'auto', marginTop: isDesktop ? '' : '100px' }}\r\n      >\r\n        <BootstrapDialogTitle\r\n          id=\"customized-dialog-title\"\r\n          onClose={handleClose}\r\n        >\r\n          Rules\r\n        </BootstrapDialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            Start by setting your Bet Amount. You can set Win Chance, Prediction\r\n            Number and Multiplier by using the slider.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            You can also adjust parameters manually by changing input values.\r\n            After you are ALL set, place your bet and swipe the MONEYBUTTON to\r\n            start the game.\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n            Roll starts and “one” number will be drawn from 0 to 9999. You win\r\n            if the roll outcome is within the chosen area.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            autoFocus\r\n            variant=\"contained\"\r\n            onClick={handleClose}\r\n            sx={{ borderRadius: '20px' }}\r\n          >\r\n            play now\r\n          </Button>\r\n        </DialogActions>\r\n      </BootstrapDialog>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nSetting.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Setting)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { login } from '../../../actions/auth'\r\n\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Stack,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  Slider,\r\n} from '@mui/material'\r\nimport CasinoIcon from '@mui/icons-material/Casino'\r\nimport SwapVertIcon from '@mui/icons-material/SwapVert'\r\nimport Settings from './Settings'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport { styled } from '@mui/material/styles'\r\nimport SyncAltIcon from '@mui/icons-material/SyncAlt'\r\nimport UnfoldMoreIcon from '@mui/icons-material/UnfoldMore'\r\nimport { useTheme } from '@material-ui/core/styles'\r\nimport { useMediaQuery } from '@material-ui/core'\r\n\r\nimport {\r\n  connectWallet,\r\n  getCurrentWalletConnected,\r\n} from '../../../utils/interact.js'\r\n\r\nconst Flip = ({ isAuthenticated, login }) => {\r\n  console.log('isAuthenticated:', isAuthenticated)\r\n\r\n  //State variables\r\n  const [walletAddress, setWallet] = useState('')\r\n  const [betAmount, setBetAmount] = useState(0.05)\r\n  const [value, setValue] = useState(5)\r\n  const [isWin, setIsWin] = useState('')\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      // You can await here\r\n      const { address } = await getCurrentWalletConnected()\r\n      setWallet(address)\r\n      // ...\r\n    }\r\n    fetchData()\r\n  }, [])\r\n\r\n  // Connect Wallet\r\n  const connectWalletPressed = async () => {\r\n    //TODO: implement\r\n    const walletResponse = await connectWallet()\r\n    setWallet(walletResponse.address)\r\n\r\n    addWalletListener()\r\n\r\n    if (walletResponse.success) {\r\n      login(walletResponse.address)\r\n    }\r\n  }\r\n  function addWalletListener() {\r\n    if (window.ethereum) {\r\n      window.ethereum.on('accountsChanged', (accounts) => {\r\n        if (accounts.length > 0) {\r\n          setWallet(accounts[0])\r\n        } else {\r\n          setWallet('')\r\n        }\r\n      })\r\n    } else {\r\n      // setStatus(\r\n      //   <p>\r\n      //     {\" \"}\r\n      //     🦊{\" \"}\r\n      //     <a href={`https://metamask.io/download.html`}>\r\n      //       You must install Metamask, a virtual Ethereum wallet, in your\r\n      //       browser.\r\n      //     </a>\r\n      //   </p>\r\n      // );\r\n    }\r\n  }\r\n\r\n  // Set Bet Amount\r\n  const handleChange = (event) => {\r\n    setBetAmount(event.target.value)\r\n  }\r\n\r\n  // Set Bet Min Value\r\n  const setMinValue = () => {\r\n    setBetAmount(0.05)\r\n  }\r\n  const MinButton = () => (\r\n    <Button\r\n      onClick={setMinValue}\r\n      sx={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.3)',\r\n        ml: 3,\r\n      }}\r\n    >\r\n      Min\r\n    </Button>\r\n  )\r\n\r\n  // Set slider change value\r\n  const sliderChange = (event, newValue) => {\r\n    setValue(newValue)\r\n  }\r\n\r\n  // Input slider value\r\n  const affectToSlider = (e) => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // Set TextField's Color\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\r\n        // border: 'solid 2px white'\r\n        borderRadius: '10px',\r\n      },\r\n      '& .MuiOutlinedInput-input': {\r\n        color: 'white',\r\n        fontWight: 'bold',\r\n        borderRadius: '10px',\r\n        background: 'linear-gradient(90deg, rgb(29, 39, 50), rgb(29, 39, 50))',\r\n        opacity: 0.9,\r\n      },\r\n    },\r\n    slider: {\r\n      '& .MuiSlider-root': {\r\n        color: 'rgb(129, 71, 218)',\r\n        height: '12px',\r\n      },\r\n      '& .MuiSlider-thumb': {\r\n        width: '30px',\r\n        height: '30px',\r\n      },\r\n    },\r\n    button: {\r\n      \"&.active\": {\r\n        background:'black',\r\n      },\r\n    },\r\n  })\r\n  const classes = useStyles()\r\n\r\n  const CustomizedSlider = styled(Slider)`\r\n    color: rgb(129, 71, 218);\r\n    height: 12px;\r\n    :hover {\r\n      color: rgb(86, 71, 218);\r\n    }\r\n  `\r\n\r\n  // onClick Bet Button\r\n  const startBet = () => {\r\n    alert('started bet')\r\n  }\r\n\r\n  //Start Rendering\r\n  return (\r\n    <section className=\"landing\">\r\n      <div className=\"dark-overlay\">\r\n        <div className=\"container\">\r\n          <Box\r\n            sx={{\r\n              background: 'rgba(255, 255, 255, 0.2)',\r\n              borderRadius: '10px',\r\n              height: 'auto',\r\n              width: '100%',\r\n              p: 3,\r\n            }}\r\n          >\r\n            {/* Rules and Audio settings */}\r\n            <Settings />\r\n\r\n            {/* Game Logic */}\r\n            <Grid container spacing={2} mt={1}>\r\n              {/* Showing Win & Multiplier & Win Chance */}\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Roll Over to Win\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={value}\r\n                    className={classes.root}\r\n                    onChange={affectToSlider}\r\n                    InputProps={{\r\n                      endAdornment: <SyncAltIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Multiplier\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                      endAdornment: <UnfoldMoreIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={4}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', mb: 2 }}>\r\n                    Win Chance\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{\r\n                      readOnly: true,\r\n                      endAdornment: <UnfoldMoreIcon />,\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Roll Setting Slider */}\r\n            <Box\r\n              sx={{\r\n                my: 3,\r\n                width: '100%',\r\n                background: 'rgb(34, 41, 52)',\r\n                borderRadius: '12px',\r\n                mx: 'auto',\r\n                p: 3,\r\n              }}\r\n            >\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} md={4}>\r\n                  {/* Button Roll Under */}\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<SwapVertIcon />}\r\n                      className={classes.button}\r\n                      sx={{\r\n                        height: '40px',\r\n                        borderRadius: '40px',\r\n                        color: 'rgb(104, 213, 215)',\r\n                        border: '1px solid rgb(104, 213, 215)',\r\n                        '&:hover': {\r\n                          background: 'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)',\r\n                          color: \"#fff\",\r\n                          border: 'none'\r\n                        }\r\n                      }}\r\n                    >\r\n                      Roll under\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n\r\n                {/* Showing Selected Value */}\r\n                <Grid item xs={12} md={4}>\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      sx={{\r\n                        mt: 2,\r\n                        background:\r\n                          'linear-gradient(153.84deg, rgba(21, 241, 178, 0.3) 8.53%, rgba(32, 226, 184, 0.3) 19.97%, rgba(62, 186, 199, 0.3) 42.01%, rgba(110, 123, 223, 0.3) 72.14%, rgba(149, 71, 243, 0.3) 94.85%)',\r\n                        borderRadius: '40px',\r\n                        width: '150px',\r\n                        padding: '10px',\r\n                      }}\r\n                    >\r\n                      <Box\r\n                        sx={{\r\n                          background:\r\n                            'linear-gradient(153.84deg, rgb(21, 241, 178) 8.53%, rgb(32, 226, 184) 19.97%, rgb(62, 186, 199) 42.01%, rgb(110, 123, 223) 72.14%, rgb(149, 71, 243) 94.85%)',\r\n                          padding: '5px',\r\n                          width: '150px',\r\n                          borderRadius: '40px',\r\n                          fontWeight: 'bold',\r\n                          fontSize: '20px',\r\n                        }}\r\n                      >\r\n                        {value}\r\n                      </Box>\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n\r\n                {/* Button Roll Upper */}\r\n                <Grid item xs={12} md={4}>\r\n                  <Stack direction=\"row\" justifyContent=\"center\">\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      startIcon={<SwapVertIcon />}\r\n                      sx={{\r\n                        height: '40px',\r\n                        borderRadius: '40px',\r\n                        color: 'rgb(104, 213, 215)',\r\n                        border: '1px solid rgb(104, 213, 215)',\r\n                        '&:hover': {\r\n                          background: 'linear-gradient(102.73deg, rgb(104, 213, 215) 2.16%, rgb(25, 159, 135) 92.24%)',\r\n                          color: \"#fff\",\r\n                          border: 'none'\r\n                        }\r\n                      }}\r\n                    >\r\n                      Roll Upper\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <CustomizedSlider\r\n                className={classes.slider}\r\n                size=\"large\"\r\n                defaultValue={5}\r\n                aria-label=\"Small\"\r\n                valueLabelDisplay=\"auto\"\r\n                step={0.1}\r\n                marks\r\n                value={value}\r\n                onChange={sliderChange}\r\n              />\r\n            </Box>\r\n\r\n            {/* Set Bet Amount & Payout */}\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} md={6}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', width: '379px', mb: 2 }}>\r\n                    Bet Amount\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={betAmount}\r\n                    className={classes.root}\r\n                    onChange={handleChange}\r\n                    InputProps={{ endAdornment: <MinButton /> }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={6}>\r\n                <Stack>\r\n                  <Typography sx={{ color: '#fff', width: '379px', mb: 2 }}>\r\n                    Payout\r\n                  </Typography>\r\n                  <TextField\r\n                    id=\"bet-amount\"\r\n                    type=\"number\"\r\n                    value={betAmount}\r\n                    readonly\r\n                    InputProps={{ readOnly: true, endAdornment: 'BNB' }}\r\n                    sx={{\r\n                      border: 'solid 3px',\r\n                      borderRadius: '10px',\r\n                      fontColor: '#fff',\r\n                    }}\r\n                  />\r\n                </Stack>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {/* Connect Wallet and Start Betting */}\r\n            <Stack direction=\"row\" justifyContent=\"center\">\r\n              {walletAddress.length > 0 || isAuthenticated ? (\r\n                <Button\r\n                  onClick={startBet}\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  startIcon={<CasinoIcon />}\r\n                  sx={{\r\n                    width: '300px',\r\n                    height: 54,\r\n                    mt: 3,\r\n                    mb: 3,\r\n                    borderRadius: '10px',\r\n                    fontWight: 'bold',\r\n                    background:\r\n                      'linear-gradient(95.32deg, rgb(129, 86, 218) 2.68%, rgb(89, 41, 137) 84.52%)',\r\n                    '&:hover': {\r\n                      background:\r\n                        'linear-gradient(95.32deg,rgb(89, 41, 137)  2.68%, rgb(129, 86, 218) 84.52%)',\r\n                    },\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  ROLL DICE{' '}\r\n                </Button>\r\n              ) : (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  size=\"large\"\r\n                  onClick={connectWalletPressed}\r\n                  sx={{\r\n                    width: '300px',\r\n                    height: 54,\r\n                    mt: 3,\r\n                    mb: 3,\r\n                    borderRadius: '10px',\r\n                    fontWight: 'bold',\r\n                    // linear-gradient(90deg , #dc2424 15%, #4a569d 80%)\r\n                    background:\r\n                      'linear-gradient(95.32deg, rgb(129, 86, 218) 2.68%, rgb(89, 41, 137) 84.52%)',\r\n                  }}\r\n                >\r\n                  {' '}\r\n                  CONNECT{' '}\r\n                </Button>\r\n              )}\r\n            </Stack>\r\n          </Box>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nFlip.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  auth: state.auth,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login })(Flip)\r\n","import React, { Fragment } from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1 className='x-large text-primary'>\r\n        <i className='fas fa-exclamation-triangle' /> Page Not Found\r\n      </h1>\r\n      <p className='large'>Sorry, this page does not exist</p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Admin from '../admin/index';\r\nimport Flip from '../games/Flip/index.js';\r\nimport Dice from '../games/Dice/index.js';\r\nimport NotFound from '../layout/NotFound';\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/admin\" component={Admin} />\r\n        <Route exact path=\"/flip\" component={Flip} />\r\n        <Route exact path=\"/dice\" component={Dice} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  address:null,\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        address: payload,\r\n        isAuthenticated: true,\r\n        loading: false\r\n      };\r\n    case LOGOUT:\r\n      return {\r\n        ...state,\r\n        address: null,\r\n        isAuthenticated: false,\r\n        loading: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default authReducer;\r\n","import { combineReducers } from 'redux';\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import axios from 'axios';\r\nimport store from '../store';\r\nimport { LOGOUT } from '../actions/types';\r\n\r\nconst api = axios.create({\r\n  baseURL: '/api',\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n/**\r\n intercept any error responses from the api\r\n and check if the token is no longer valid.\r\n ie. Token has expired or user is no longer\r\n authenticated.\r\n logout the user if the token has expired\r\n**/\r\n\r\napi.interceptors.response.use(\r\n  res => res,\r\n  err => {\r\n    if (err.response.status === 401) {\r\n      store.dispatch({ type: LOGOUT });\r\n    }\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default api;\r\n","import api from './api';\r\n\r\nconst setAuthToken = token => {\r\n  if (token) {\r\n    api.defaults.headers.common['x-auth-token'] = token;\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    delete api.defaults.headers.common['x-auth-token'];\r\n    localStorage.removeItem('token');\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport setAuthToken from './utils/setAuthToken';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\n// set up a store subscription listener\r\n// to store the users token in localStorage\r\n\r\n// initialize current state from redux store for subscription comparison\r\n// preventing undefined error\r\nlet currentState = store.getState();\r\n\r\nstore.subscribe(() => {\r\n  // keep track of the previous and current state to compare changes\r\n  let previousState = currentState;\r\n  currentState = store.getState();\r\n  // if the token changes set the value in localStorage and axios headers\r\n  if (previousState.auth.token !== currentState.auth.token) {\r\n    const token = currentState.auth.token;\r\n    setAuthToken(token);\r\n  }\r\n});\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\n// import logo from './logo.svg';\r\nimport './App.css'\r\nimport Navbar from './components/layout/Navbar'\r\nimport Landing from './components/layout/Landing'\r\nimport Routes from './components/routing/Routes'\r\nimport { LOGOUT } from './actions/types'\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport setAuthToken from './utils/setAuthToken'\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    // check for token in LS\r\n    if (localStorage.token) {\r\n      setAuthToken(localStorage.token)\r\n    }\r\n    // store.dispatch(loadUser());\r\n\r\n    // log user out from all tabs if they log out in one tab\r\n    window.addEventListener('storage', () => {\r\n      if (!localStorage.token) store.dispatch({ type: LOGOUT })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Navbar />\r\n          <Switch>\r\n            <Route exact path=\"/\" component={Landing} />\r\n            <Route component={Routes} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}